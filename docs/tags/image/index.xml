<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Image - Tag - NozZy</title>
        <link>https://nozyzy.github.io/tags/image/</link>
        <description>Image - Tag - NozZy</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>nozzy@club-rezo.net (NozZy)</managingEditor>
            <webMaster>nozzy@club-rezo.net (NozZy)</webMaster><lastBuildDate>Tue, 30 Apr 2024 21:58:48 &#43;0200</lastBuildDate><atom:link href="https://nozyzy.github.io/tags/image/" rel="self" type="application/rss+xml" /><item>
    <title>Silent Hill 2</title>
    <link>https://nozyzy.github.io/posts/silent_hill_2/</link>
    <pubDate>Tue, 30 Apr 2024 21:58:48 &#43;0200</pubDate>
    <author>NozZy</author>
    <guid>https://nozyzy.github.io/posts/silent_hill_2/</guid>
    <description><![CDATA[Midnight Flag 2024 - Silent Hill 2 Category Steganography
Description by memory
retrouve le flag lol
Files Silent_hill_2.png
Difficulty Author: kuorashi Write up Aperisolve Putting the file on Aperisolve helps us find the entry point:
It really looks like there is som LSB hidden in 3 bits in the two corners. We can suppose there is the same on the bottom left, but is not easily visible.
It appears for the three colors, so there might be LSB 3-Bits RGB]]></description>
</item>
<item>
    <title>S0uS_l3s_r4d4r</title>
    <link>https://nozyzy.github.io/posts/s0us_l3s_r4d4r/</link>
    <pubDate>Mon, 29 Apr 2024 23:17:07 &#43;0200</pubDate>
    <author>NozZy</author>
    <guid>https://nozyzy.github.io/posts/s0us_l3s_r4d4r/</guid>
    <description><![CDATA[Midnight Flag 2024 - S0uS_l3s_r4d4r Category Steganography
Description By memory
Recover the hidden flag
Format : MCTF{flag{XXXXXXXXX}}
Files Gorille_wallpaper.jpg
Difficulty Author: kuorashi Write up Aperisolve does not give anything interesting at first sight. But if you scroll into the strings, you&rsquo;ll find something interesting.
Push the thing a way further, doing this:
strings -n 8 Gorille_wallpaper.jpg ... @wzJPB))v ,U#=b0t` {La[!dm7 qB)P&#39;,W18b import string; alph = string.ascii_letters;flag_enc = &#34;109 115 104 110 { 130 111 131 104 111 132 108 122 123 145 104 122 149 121 118 119 149 118 123 }&#34; def decode_flag(flag): lst = flag.]]></description>
</item>
<item>
    <title>MyFace</title>
    <link>https://nozyzy.github.io/posts/myface/</link>
    <pubDate>Mon, 29 Apr 2024 20:36:40 &#43;0200</pubDate>
    <author>NozZy</author>
    <guid>https://nozyzy.github.io/posts/myface/</guid>
    <description><![CDATA[Midnight Flag 2024 - MyFace Category Steganography
Description Description by memory
You will need to find my face to decode our messages
Link Access to an instantiated website
Difficulty Author: TBD Write up Sources As I am writing this, I do not have access to the source description and website. I only have what I&rsquo;ve done locally. MyFace We are given a website, with few messages between two people. The first ones are in plain text, while the two lasts are in base64.]]></description>
</item>
</channel>
</rss>
